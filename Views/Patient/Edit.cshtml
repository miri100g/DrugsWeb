@model Gui_.Models.PatientViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/MainLayout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <body>

        <!--sub tabs-->
        <section class="row" id="tmCallToAction">
            <div class="col-lg-8 tm-call-to-action-col" style="position:relative; left:285px; top:-100px; ">
                <div class="container-fluid">
                    <div class="row tm-brand-row">
                        <div class="col-lg-12 col-11 tm-contact-col">
                            <div class="tm-nav">
                                <nav class="navbar navbar-expand-lg navbar-light tm-bg-white-transparent tm-navbar">
                                    <div class="collapse navbar-collapse" id="navbarNav">
                                        <ul class="navbar-nav">
                                            <li class="nav-item">
                                                <a class="navbar-brand"> @Html.ActionLink("Add", "Create", "Patient")</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="navbar-brand">@Html.ActionLink("Edit/Delete", "Index", "Patient")</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="navbar-brand">@Html.ActionLink("Watch Full List", "Watch", "Patient")</a>
                                            </li>
                                        </ul>
                                    </div>
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- end sub tabs-->

        <div class="form-horizontal">
            <section class="row tm-contact-row" style="background-color:white; position:relative; left:570px; top:-150px; width:840px; opacity:0.8;">
                <div class="col-lg-6 tm-contact-col-left">
                    <form action="#" method="POST" id="tmContactForm" style="position:relative; left:550px; top:-150px; width:850px; opacity:0.9; " class="tm-bg-white-transparent tm-contact-form">
                        <div style="color:black; width:800px; left:50px; position:relative; text-emphasis-color:black;">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id)

                            <div class="form-group">
                                @Html.LabelFor(model => model.DateOfRegistration, htmlAttributes: new { @class = "control-label col-md-6 text-dark" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.DateOfRegistration, new { htmlAttributes = new { @class = "form-control text-dark", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.DateOfRegistration, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IdP, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.IdP, new { htmlAttributes = new { @class = "form-control text-dark", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.IdP, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.FName, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.FName, new { htmlAttributes = new { @class = "form-control text-dark" } })
                                    @Html.ValidationMessageFor(model => model.FName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.LName, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.LName, new { htmlAttributes = new { @class = "form-control text-dark" } })
                                    @Html.ValidationMessageFor(model => model.LName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.gender, new { htmlAttributes = new { @class = "form-control text-dark", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DateOfBirthd, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.DateOfBirthd, new { htmlAttributes = new { @class = "form-control text-dark", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.DateOfBirthd, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control text-dark" } })
                                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PhonNumber, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PhonNumber, new { htmlAttributes = new { @class = "form-control text-dark" } })
                                    @Html.ValidationMessageFor(model => model.PhonNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="position:relative; left:240px;">
                                <input type="submit" value="Save Changes" class="btn btn-primary tm-btn-submit rounded-0" />
                                @Html.ActionLink("Back to List", "Index", "Patient", new { @class = "btn btn-primary tm-btn-submit rounded-0" })
                            </div>
                        </div>

                    </form>

                </div>

            </section>

        </div>
    </body>
}
@if (ViewBag.Message != null)
{
    <script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.Message");
            };
    </script>
}
@if (ViewBag.Message != null)
{
    <script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.Message");
            };
    </script>
}
