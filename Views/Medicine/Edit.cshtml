@model Gui_.Models.MedicineViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/MainLayout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <body>
        <!--sub tabs-->
        <section class="row" id="tmCallToAction">
            <div class="col-lg-8 tm-call-to-action-col" style="position:relative; left:285px; top:-100px; ">
                <div class="container-fluid">
                    <div class="row tm-brand-row">
                        <div class="col-lg-12 col-11 tm-contact-col">
                            <div class="tm-nav">
                                <nav class="navbar navbar-expand-lg navbar-light tm-bg-white-transparent tm-navbar">
                                    <div class="collapse navbar-collapse" id="navbarNav">
                                        <ul class="navbar-nav">
                                            <li class="nav-item">
                                                <a class="navbar-brand"> @Html.ActionLink("Add", "Create", "Medicine")</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="navbar-brand">@Html.ActionLink("Edit/Delete", "Index", "Medicine")</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="navbar-brand">@Html.ActionLink("Watch Full List", "Details", "Medicine")</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="navbar-brand">@Html.ActionLink("Information", "Info", "Medicine")</a>
                                            </li>
                                        </ul>
                                    </div>
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- end sub tabs-->

        <div class="form-horizontal">
            <section class="row tm-contact-row" style="background-color:white; position:relative; left:570px; top:-150px; width:840px; opacity:0.8;">
                <div class="col-lg-6 tm-contact-col-left">
                    <form action="#" method="POST" id="tmContactForm" style="position:relative; left:550px; top:-150px; width:850px; opacity:0.9; " class="tm-bg-white-transparent tm-contact-form">
                        <div style="color:black; width:800px; left:50px; position:relative; text-emphasis-color:black;">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.ID)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Ndc, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Ndc, new { htmlAttributes = new { @class = "form-control text-dark", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Ndc, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">

                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control text-dark", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Producer, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Producer, new { htmlAttributes = new { @class = "form-control text-dark" } })
                                    @Html.ValidationMessageFor(model => model.Producer, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                <label class="control-label col-md-3">Image</label>
                                <div class="col-md-10">
                                    <input type="file" id="img" name="MImage" class="custom-file-input col-md-1 form-control" onchange="changeLabel(this.value)">
                                    <label class="custom-file-label" for="customFile" id="fileLable">@Model.MImage</label>
                                </div>
                            </div>





                            <div class="form-group">
                                @Html.LabelFor(model => model.GenericName, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.GenericName, new { htmlAttributes = new { @class = "form-control text-dark" } })
                                    @Html.ValidationMessageFor(model => model.GenericName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ActiveIngredients, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    <div class="form-group">
                                        <textarea rows="6" id="med_activeIngredients" name="ActiveIngredients" class="form-control text-dark " required="">@Model.ActiveIngredients</textarea>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Properties, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    <div class="form-group">
                                        <textarea rows="6" id="med_prop" name="Properties" class="form-control text-dark " required="">@Model.Properties</textarea>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group" style="position:relative; left:240px;">
                                <input type="submit" value="Save Changes" class="btn btn-primary tm-btn-submit rounded-0" />
                                @Html.ActionLink("Back to List", "Index", "Medicine", new { @class = "btn btn-primary tm-btn-submit rounded-0" })
                            </div>
                        </div>
                    </form>
                </div>
            </section>
        </div>
    </body>
}
@if (ViewBag.Message != null)
{
    <script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.Message");
            };
    </script>
}

<script type="text/javascript">

    function changeLabel(src) {
        src = src.substring(src.lastIndexOf('\\') + 1, src.lenth);
        document.getElementById('fileLabel').innerHTML = src;

    }
</script>
@if (ViewBag.Message != null)
{
    <script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.Message");
            };
    </script>
}